{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","defaultProps","FeedbackOptions","options","onLeaveFeedback","list","Object","keys","map","btnName","item","button","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","totalFeedback","positiveValue","value","App","state","option","setState","prevState","countTotalFeedback","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b473efdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__wbN7U\",\"value\":\"Statistics_value__3ukOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__1VxjJ\",\"item\":\"FeedbackOptions_item__2ODRg\",\"button\":\"FeedbackOptions_button__1LgeC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3DFnY\",\"title\":\"Section_title__jxxRu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__XcNut\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className={s.list}>\n      {Object.keys(options).map(btnName => {\n        return (\n          <li className={s.item} key={btnName}>\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={() => {\n                onLeaveFeedback(btnName);\n              }}\n            >\n              {btnName}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => <p className={s.message}>{message}</p>;\n\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport Notification from '../Notification';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  const totalFeedback = total();\n  const positiveValue = positivePercentage();\n  return (\n    <div>\n      {!!totalFeedback ? (\n        <ul>\n          <li className={s.item}>\n            <p>\n              Good: <span className={s.value}>{good}</span>\n            </p>\n          </li>\n          <li className={s.item}>\n            <p>\n              Neutral: <span className={s.value}>{neutral}</span>\n            </p>\n          </li>\n          <li className={s.item}>\n            <p>\n              Bad: <span className={s.value}>{bad}</span>\n            </p>\n          </li>\n          <li className={s.item}>\n            <p>\n              Total: <span className={s.value}>{totalFeedback}</span>\n            </p>\n          </li>\n          <li className={s.item}>\n            <p>\n              Positive feedback:{' '}\n              <span className={s.value}>{positiveValue}%</span>\n            </p>\n          </li>\n        </ul>\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  // суммируем значения отзывов в state\n  countTotalFeedback = () => {\n    const total = Object.keys(this.state).reduce(\n      (acc, value) => acc + this.state[value],\n      0,\n    );\n    return total;\n  };\n\n  // считаем процент хороших отзывов\n  countPositiveFeedbackPercentage = () => {\n    const percent = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n    return percent;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback}\n            positivePercentage={this.countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}